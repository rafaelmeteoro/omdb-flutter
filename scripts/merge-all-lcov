#!/usr/bin/env bash

set -e

# find . -name 'lcov.info' -exec cat {} \; > ./coverage/lcov.base.info
# find . -name 'lcov.base.info' -exec cat {} \; > ./coverage/lcov.info

if [ -f coverage/lcov.info ]; then
  rm coverage/lcov.info
fi

## Test all infrastructure
# for directory in $(find infrastructure -type f -iname pubspec.yaml | awk -F pubspec.yaml '{ print $1 }'); do
#   echo "merge project ${directory}coverage/lcov.info"
#   # cat "${directory}coverage/lcov.info" >> coverage/lcov.info

#   sed "s/^SF:.*lib/SF:${directory//\//\\/}lib/g" ${directory}coverage/lcov.info >> coverage/lcov.info
#   # sed "s/^SF:.*lib/SF:infrastructure\/dev_core\/lib/g" ${directory}coverage/lcov.info >> coverage/lcov.info
#   # root_infrastructure_directory='../../coverage/lcov.info'
#   # scripts/merge-lcov merge $directory $root_infrastructure_directory
# done

## Test all infrastructure
for directory in $(find infrastructure -type f -iname pubspec.yaml | awk -F pubspec.yaml '{ print $1 }'); do
  echo "merge project ${directory}coverage/lcov.info"
  sed "s/^SF:.*lib/SF:${directory//\//\\/}lib/g" ${directory}coverage/lcov.info >> coverage/lcov.info
done

## Test all infrastructure
for directory in $(find features -type f -iname pubspec.yaml | awk -F pubspec.yaml '{ print $1 }'); do
  echo "merge project ${directory}coverage/lcov.info"
  sed "s/^SF:.*lib/SF:${directory//\//\\/}lib/g" ${directory}coverage/lcov.info >> coverage/lcov.info
done

app_directory='app'
echo "merge project $app_directory"
sed "s/^SF:.*lib/SF:${app_directory//\//\\/}\/lib/g" ${app_directory}/coverage/lcov.info >> coverage/lcov.info

# genhtml coverage/lcov.info --output=./coverage -o coverage

# open coverage/index.html
